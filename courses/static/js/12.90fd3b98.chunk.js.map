{"version":3,"sources":["pages/login.tsx","../node_modules/antd/lib/row/style/index.js","../node_modules/antd/lib/col/style/index.js","../node_modules/antd/lib/row/index.js","../node_modules/antd/lib/col/index.js","constants.ts","assets/img/logo192.png","components/KratosMessages.tsx","components/KratosForm.tsx"],"names":["Login","useState","requestResponse","setRequestResponse","useEffect","initialiseRequest","type","then","request","catch","messages","form","methods","password","config","className","span","src","logo","id","submitLabel","action","fields","header","require","Object","defineProperty","exports","value","_default","Row","Col","FORM_LABELS","label","priority","email","identifier","depts","offerings_sub","offerings","children","Text","KratosMessages","map","text","style","maxWidth","KratosForm","fieldsSorted","sortFormFields","Fragment","layout","method","onFinish","values","console","log","initialValues","remember","Item","marginBottom","Title","level","length","renderFormFields","to","routes","recovery","path","registration","paddingBottom","paddingTop","htmlType","width","labelCol","wrapperCol","sort","current","next","c","name","field","required","_required","_label","display","message","validateStatus","defaultValue"],"mappings":"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","file":"static/js/12.90fd3b98.chunk.js","sourcesContent":["import \"assets/scss/login.scss\";\n\nimport { LoginFlow } from \"@ory/kratos-client\";\nimport { Col, Row } from \"antd\";\nimport logo from \"assets/img/logo192.png\";\nimport { KratosForm } from \"components/KratosForm\";\nimport { KratosMessages } from \"components/KratosMessages\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { initialiseRequest } from \"services/kratos\";\n\nconst Login = () => {\n  const [requestResponse, setRequestResponse] = useState<LoginFlow>();\n  // const callback = useCallback(setRequestResponse)\n  useEffect(() => {\n    const request = initialiseRequest({\n      type: \"login\",\n    }) as Promise<LoginFlow>;\n    request.then((request) => setRequestResponse(request)).catch(() => {});\n  }, []);\n\n  const messages = requestResponse?.messages;\n  const form = requestResponse?.methods?.password?.config;\n\n  return (\n    <div className=\"auth\">\n      <div className=\"background\">\n        <Row>\n          <Col span={18}>\n            <div className=\"header\">\n              <img src={logo} />\n              <h1>Academics and Career Council</h1>\n              <h4>Courses and Reviews Portal</h4>\n            </div>\n          </Col>\n          <Col span={6}>\n            <div id=\"login-password\" className=\"form\">\n              {form && (\n                <KratosForm\n                  submitLabel=\"Sign in\"\n                  action={form.action}\n                  fields={form.fields}\n                  messages={form.messages}\n                  header={\"Sign in to Continue\"}\n                />\n              )}\n              {messages && <KratosMessages messages={messages} />}\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","\"use strict\";\n\nrequire(\"../../style/index.less\");\n\nrequire(\"../../grid/style\");","\"use strict\";\n\nrequire(\"../../style/index.less\");\n\nrequire(\"../../grid/style\");","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _grid = require(\"../grid\");\n\nvar _default = _grid.Row;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _grid = require(\"../grid\");\n\nvar _default = _grid.Col;\nexports[\"default\"] = _default;","interface FormLabel {\n    label: string;\n    priority: number;\n}\n\nexport const FORM_LABELS: { [key: string]: FormLabel } = {\n    \"to_verify\": {\n        label: \"Email\",\n        priority: 100\n    },\n    \"csrf_token\": {\n        label: \"\",\n        priority: 100\n    },\n    \"traits.email\": {\n        label: \"Email\",\n        priority: 90,\n    },\n    email: {\n        label: \"Email\",\n        priority: 80\n    },\n    identifier: {\n        label: \"Email\",\n        priority: 80\n    },\n    password: {\n        label: \"Password\",\n        priority: 80\n    }\n}\n\nexport const depts = [\"AE\", \"ART\", \"BSE\", \"CE\", \"CHE\", \"CHM\", \"CS\", \"CSO\", \"DES\", \"ECO\", \"EE\", \"EEM\", \"ENG\", \"ES\", \"ESC\", \"ESO\", \"IME\", \"PHY\", \"LIF\", \"LT\", \"MBA\", \"ME\", \"MSE\", \"MSO\", \"MTH\", \"NT\", \"PHI\", \"PHY\", \"PSY\", \"SE\", \"SOC\", \"TA\"];\n\nconst offerings_sub = [\n    {\n        value: 'Even',\n        label: 'Even',\n    },\n    {\n        value: 'Odd',\n        label: 'Odd',\n    },\n]\n\nexport const offerings = [\n\n    {\n        value: '20-21',\n        label: '20-21',\n        children: offerings_sub\n    },\n    {\n        value: '19-20',\n        label: '19-20',\n        children: offerings_sub\n    }, {\n        value: '18-19',\n        label: '18-19',\n        children: offerings_sub\n    },\n    {\n        value: '17-18',\n        label: '17-18',\n        children: offerings_sub\n    },\n\n];","export default __webpack_public_path__ + \"static/media/logo192.2b6e6951.png\";","import React from \"react\";\nimport { Message } from \"@ory/kratos-client\";\nimport { Typography } from \"antd\";\n\nconst { Text } = Typography;\n\nexport const KratosMessages = ({ messages }: { messages: Message[] }) => (\n  <div className=\"messages\">\n    {messages.map(({ text, id, type }) => (\n      <div className=\"errortext\" style={{ maxWidth: \"100%\" }}>\n        <Text type=\"danger\" className=\"errortext\">\n          {text}\n        </Text>\n      </div>\n    ))}\n  </div>\n);\n","import { FormField, Message } from \"@ory/kratos-client\";\nimport { Button, Form, Input, Typography } from \"antd\";\nimport { KratosMessages } from \"components/KratosMessages\";\nimport config from \"config/kratos\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { FORM_LABELS } from \"../constants\";\n\nexport const KratosForm = ({\n  action,\n  messages = [],\n  fields,\n  submitLabel = \"Submit\",\n  header,\n}: {\n  action: string;\n  messages?: Message[];\n  fields: FormField[];\n  submitLabel: string;\n  header: string;\n}) => {\n  const fieldsSorted = sortFormFields({ fields });\n  return (\n    <React.Fragment>\n      {action && (\n        <div className=\"fieldset\">\n          {/* <ConfigProvider form={{validateMessages:messages}}> */}\n          <Form\n            {...layout}\n            action={action}\n            // style={{ margin: \"60px 0\" }}\n            method=\"POST\"\n            onFinish={(values) => console.log(values)}\n            initialValues={{ remember: true }}\n            layout=\"vertical\"\n            className=\"fieldset\"\n            // style={{ marginBottom: 0 }}\n          >\n            {/* <Form {...layout}> */}\n            <form\n              action={action}\n              // style={{ margin: \"60px 0\" }}\n              method=\"POST\"\n            >\n              <Form.Item style={{ marginBottom: 0 }}>\n                <Typography>\n                  <Typography.Title level={2} className=\"formtitle\">\n                    {header}\n                  </Typography.Title>\n                </Typography>\n              </Form.Item>\n              <Form.Item>\n                {!!messages?.length && <KratosMessages messages={messages} />}\n              </Form.Item>\n              {renderFormFields({ fields: fieldsSorted })}\n              <Form.Item style={{ marginBottom: 0 }}>\n                <NavLink\n                  className=\"login-form-forgot\"\n                  to={config.routes.recovery.path}\n                >\n                  Forgot password?\n                </NavLink>\n                <NavLink\n                  className=\"login-form-forgot\"\n                  to={config.routes.registration.path}\n                >\n                  <br />\n                  New User?\n                  <br />\n                </NavLink>\n              </Form.Item>\n\n              <Form.Item\n                style={{ marginBottom: 2, paddingBottom: 20, paddingTop: 5 }}\n              >\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button\"\n                  style={{ width: \"100%\" }}\n                >\n                  {submitLabel}\n                </Button>\n              </Form.Item>\n            </form>\n          </Form>\n          {/* </ConfigProvider> */}\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\nconst sortFormFields = ({ fields }: { fields: FormField[] }) => {\n  return fields.sort((current, next) => {\n    const c = FORM_LABELS[current.name]?.priority || 0;\n    const n = FORM_LABELS[next.name]?.priority || 0;\n    return n - c;\n  });\n};\n\nconst renderFormFields = ({ fields = [] }: { fields: FormField[] }) =>\n  fields.map((field) => {\n    const { name, type, required, value, messages = [] } = field;\n    const _required = required ? { required } : {};\n    const _label = FORM_LABELS[name]?.label;\n    const style = type === \"hidden\" ? { display: \"none\" } : {};\n    const textmsg = messages.map((message) => {\n      return message.text;\n    }) as Array<string>;\n    return (\n      <fieldset key={name} style={style}>\n        <label>\n          <Form.Item\n            label={_label}\n            validateStatus={messages.length === 0 ? \"\" : \"error\"}\n            // help={messages.length === 0 ? \"\" : \"\".concat(...textmsg)}\n            style={{ marginBottom: 0 }}\n          >\n            {/* {messages[0]} */}\n            <Input\n              type={type}\n              name={name}\n              defaultValue={value as any}\n              {..._required}\n              style={{ maxWidth: \"100%\", width: \"100%\" }}\n            ></Input>\n          </Form.Item>\n          {/* {_label && <span>{_label}</span>} */}\n        </label>\n        <KratosMessages messages={messages} />\n      </fieldset>\n    );\n  });\n"],"sourceRoot":""}