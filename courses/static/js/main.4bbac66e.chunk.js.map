{"version":3,"sources":["pages/error.tsx","hooks/useOry.ts","services/keto.ts","components/PrivateRoute.tsx","App.tsx","reportWebVitals.ts","index.tsx","config/kratos.ts","services/abac.ts","components/Loader.tsx","config/backend.ts","services/kratos.ts","store/index.ts"],"names":["ErrorPage","props","history","useHistory","React","useEffect","window","document","title","status","id","subTitle","toString","message","extra","to","type","onClick","goBack","push","location","reload","useOry","kratos","keto","useState","loading","setLoading","error","setError","useRecoilState","SESSION_STATE","session","setSession","authorize","a","whoami","undefined","withCredentials","response","role","data","console","log","checkAccess","useCallback","active","baseUrl","Promise","resolve","reject","axios","get","then","resp","catch","Role","ADMIN","this","BACKEND_ROOT_URL","PrivateRoute","Component","component","LoaderComponent","loaderComponent","routeRedirect","path","rest","Fragment","exact","render","pathname","PdfViewer","lazy","Login","Dashboard","Register","Landing","Course","Search","Recover","Settings","App","useRecoilValue","rules","roles","basename","fallback","Loader","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","browser","admin","public","register","projectName","routes","settings","recovery","verification","login","registration","permissions","LOGIN_CPANEL","CREATE_COURSE","MODIFY_COURSE","DELETE_COURSE","CREATE_REVIEW","MODERATE_REVIEW","CREATE_FILE","DELETE_FILE","ELEVATE_USER","DEMOTE_USER","BAN_USER","MANAGER","USER","ANONYMOUS","tip","style","width","height","BACKEND_LOGS","PublicApi","basePath","config","initialiseRequest","endpoints","verify","recover","request","URLSearchParams","search","authRequest","endpoint","getSelfServiceLoginFlow","getSelfServiceRegistrationFlow","getSelfServiceSettingsFlow","getSelfServiceRecoveryFlow","href","atom","key","default"],"mappings":"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","file":"static/js/main.4bbac66e.chunk.js","sourcesContent":["import Result from \"antd/lib/result\";\nimport Button from \"antd/lib/button\";\nimport { ResultStatusType } from \"antd/lib/result\";\nimport React, { useEffect } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\n\nconst ErrorPage = (props: { id: ResultStatusType }) => {\n  const history = useHistory();\n  React.useEffect(() => {\n    window.document.title = `An Error Occured!`;\n  });\n  const message = () => {\n    switch (props.id.toString()) {\n      case \"403\":\n        return \"Sorry, You are not authorized to view this page!\";\n      case \"404\":\n        return \"Sorry, the page you visited does not exist.\";\n      case \"500\":\n        return \"We have some troubles connecting to our servers. Try again shortlye!\";\n      default:\n        return \"We have some troubles connecting to our servers. Try again shortly!\";\n    }\n  };\n  return (\n    <Result\n      status={props.id || 500}\n      title={props.id || \"Internal Server Error\"}\n      subTitle={message() || \"Unknown Error\"}\n      extra={\n        <NavLink to=\"/home\">\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              if (props.id.toString() !== \"404\") history.goBack();\n              else if (props.id.toString() === \"403\") history.push(\"/login\");\n              else window.location.reload();\n            }}\n          >\n            Back Home\n          </Button>\n        </NavLink>\n      }\n    />\n  );\n};\n\nexport default ErrorPage;\n","import { PublicApi } from '@ory/kratos-client';\nimport axios from 'axios';\nimport { BACKEND_ROOT_URL } from 'config/backend';\nimport { KRATOS_BROWSER_URL } from 'config/kratos';\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { KetoApi } from 'services/keto';\nimport { SESSION_STATE } from 'store';\n\nconst useOry = (kratos: PublicApi, keto: KetoApi): [boolean, boolean, typeof session] => {\n    const [loading, setLoading] = useState<boolean>(true);\n    const [error, setError] = useState<boolean>(false);\n    const [session, setSession] = useRecoilState(SESSION_STATE);\n    const delay = (ms: number) => new Promise((res) => setTimeout(res, ms));\n\n    const authorize = async () => {\n        try {\n            const response = await kratos.whoami(undefined, undefined, { withCredentials: true })\n\n            if (response.status === 200) {\n                const { role } = await keto.whoami();\n                setSession({ ...response.data, role: role });\n                console.log(response, loading)\n                setLoading(false);\n            } else if (response.status === 401) {\n                console.log(loading, response)\n                setLoading(false);\n            }\n        } catch (error) {\n            console.log(loading)\n\n            setError(true);\n            setLoading(false);\n        }\n    };\n\n    const checkAccess = useCallback(() => {\n        if (session.active) {\n            setLoading(false);\n        } else {\n            authorize();\n        }\n    }, [session]);\n\n    useEffect(() => {\n        checkAccess();\n    }, [checkAccess]);\n\n    return [loading, error, session]\n}\n\nexport default useOry","import { Role } from \"services/abac\";\nimport axios, { AxiosResponse } from \"axios\";\nimport { BACKEND_ROOT_URL } from \"config/backend\";\n\nexport class KetoApi {\n    baseUrl: string\n    constructor(baseUrl: string) {\n        this.baseUrl = baseUrl\n    }\n\n    whoami = async () => {\n        return new Promise<{ message: string, role: Role }>((resolve, reject) => {\n            axios.get<any, AxiosResponse<{ message: string, role: Role.ANONYMOUS }>>(this.baseUrl, {\n                withCredentials: true\n            }).then((resp) => { resolve(resp.data) }).catch(() => { resolve({ message: \"failed\", role: Role.ADMIN }) })\n        })\n    }\n}\n\nexport const keto = new KetoApi(`${BACKEND_ROOT_URL}/.rogue/whoami`)","import useOry from \"hooks/useOry\";\nimport ErrorPage from \"pages/error\";\nimport React, { ComponentType } from \"react\";\nimport { Redirect, Route, RouteComponentProps } from \"react-router-dom\";\nimport { keto } from \"services/keto\";\nimport { kratos } from \"services/kratos\";\n\nconst PrivateRoute = (props: {\n  component: ComponentType<RouteComponentProps>;\n  loaderComponent: ComponentType;\n  routeRedirect: string;\n  path: string;\n}) => {\n  const [loading, error, session] = useOry(kratos, keto);\n  console.log(loading, session);\n  const {\n    component: Component,\n    loaderComponent: LoaderComponent,\n    routeRedirect,\n    path,\n    ...rest\n  } = props;\n\n  return (\n    <React.Fragment>\n      {loading && <LoaderComponent />}\n      {!loading &&\n        (session.active ? (\n          <Route\n            {...rest}\n            path={path}\n            exact\n            render={(props): any => {\n              return error ? <ErrorPage id={403} /> : <Component {...props} />;\n            }}\n          />\n        ) : (\n          <Redirect\n            to={{\n              pathname: routeRedirect,\n            }}\n          />\n        ))}\n    </React.Fragment>\n  );\n};\n\nexport default PrivateRoute;\n","import \"App.css\";\n\nimport { rules } from \"services/abac\";\nimport React, { lazy } from \"react\";\nimport { AbacProvider } from \"react-abac\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { SESSION_STATE } from \"store\";\nimport { Suspense } from \"react\";\nimport Loader from \"components/Loader\";\nimport PrivateRoute from \"components/PrivateRoute\";\nimport { kratos } from \"services/kratos\";\nconst PdfViewer = lazy(() => import(\"pages/pdf\"));\nconst Login = lazy(() => import(\"pages/login\"));\nconst Dashboard = lazy(() => import(\"pages/dashboard\"));\nconst Register = lazy(() => import(\"pages/register\"));\nconst Landing = lazy(() => import(\"pages/landing\"));\nconst Course = lazy(() => import(\"containers/Course\"));\nconst Search = lazy(() => import(\"pages/search\"));\nconst Recover = lazy(() => import(\"pages/recovery\"));\nconst Settings = lazy(() => import(\"pages/settings\"));\n\nconst App = () => {\n  const { role } = useRecoilValue(SESSION_STATE);\n  kratos.whoami(undefined, undefined, { withCredentials: true }).then().catch();\n  return (\n    <AbacProvider rules={rules} roles={[role]}>\n      <BrowserRouter basename={\"/courses\"}>\n        <Switch>\n          <Suspense fallback={<Loader />}>\n            <Route path=\"/test/cpanel\" component={Dashboard} />\n            <PrivateRoute\n              path=\"/cpanel\"\n              component={Dashboard}\n              loaderComponent={Loader}\n              routeRedirect=\"/login\"\n            />\n            <PrivateRoute\n              path=\"/course/:cid\"\n              component={Course}\n              loaderComponent={Loader}\n              routeRedirect=\"/login\"\n            />\n            <PrivateRoute\n              path=\"/search\"\n              component={Search}\n              loaderComponent={Loader}\n              routeRedirect=\"/login\"\n            />\n            <PrivateRoute\n              path=\"/files/:fid/:fname\"\n              component={PdfViewer}\n              loaderComponent={Loader}\n              routeRedirect=\"/login\"\n            />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/registration\" component={Register} />\n            <Route path=\"/recovery\" component={Recover} />\n            <Route path=\"/settings\" component={Settings} />\n            <Route path=\"/\" exact component={Landing} />\n          </Suspense>\n        </Switch>\n      </BrowserRouter>\n    </AbacProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RecoilRoot } from \"recoil\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { BACKEND_ROOT_URL } from \"./backend\";\n\nexport const BASE_URL = \"https://anciitk.herokuapp.com/\";\nexport const KRATOS_BROWSER_URL = \"https://anciitk.herokuapp.com/.ory/kratos/public\";\nexport const KRATOS_PUBLIC_URL = \"https://anciitk.herokuapp.com/.ory/kratos/public\";\nexport const KRATOS_ADMIN_URL = \"http://127.0.0.1:4434\";\n\nexport default {\n  kratos: {\n    browser: KRATOS_BROWSER_URL,\n    admin: KRATOS_ADMIN_URL,\n    public: KRATOS_PUBLIC_URL,\n  },\n  register: `${BACKEND_ROOT_URL}/register`,\n  baseUrl: BASE_URL,\n  projectName: \"SecureApp\",\n  routes: {\n    settings: {\n      path: \"/settings\",\n    },\n    recovery: {\n      path: \"/recovery\",\n    },\n    verification: {\n      path: \"/verify\",\n    },\n    login: {\n      path: \"/login\",\n    },\n    registration: {\n      path: \"/registration\",\n    },\n  },\n};\n","import { Rules } from \"react-abac\"\n\ninterface User {\n    uuid: string;\n    roles: Role[];\n    permissions: permissions[];\n}\n\n// an object with all permissions\nexport enum permissions {\n    LOGIN_CPANEL = \"LOGIN_CPANEL\",\n    CREATE_COURSE = \"CREATE_USER\",\n    MODIFY_COURSE = \"EDIT_POST\",\n    DELETE_COURSE = \"DELETE_COURSE\",\n    CREATE_REVIEW = \"CREATE_REVIEW\",\n    MODERATE_REVIEW = \"MODERATE_REVIEW\",\n    CREATE_FILE = \"CREATE_FILE\",\n    DELETE_FILE = \"DELETE_FILE\",\n    ELEVATE_USER = \"ELEVATE_USER\",\n    DEMOTE_USER = \"DEMOTE_USER\",\n    BAN_USER = \"BAN_USER\"\n}\n\nexport enum Role {\n    BANNED = \"BANNED\",\n    ANONYMOUS = \"ANONYMOUS\",\n    USER = \"USER\",\n    MANAGER = \"MANAGER\",\n    ADMIN = \"ADMIN\",\n}\n\n// rules describing what roles have what permissions\nexport const rules: Rules<Role, permissions, User> = {\n    [Role.ADMIN]: {\n        [permissions.LOGIN_CPANEL]: true,\n        [permissions.CREATE_COURSE]: true,\n        [permissions.MODIFY_COURSE]: true,\n        [permissions.DELETE_COURSE]: true,\n        [permissions.CREATE_REVIEW]: true,\n        [permissions.MODERATE_REVIEW]: true,\n        [permissions.CREATE_FILE]: true,\n        [permissions.DELETE_FILE]: true,\n        [permissions.ELEVATE_USER]: true,\n        [permissions.DEMOTE_USER]: true,\n        [permissions.DEMOTE_USER]: true,\n        [permissions.BAN_USER]: true\n\n    },\n    [Role.MANAGER]: {\n        [permissions.LOGIN_CPANEL]: true,\n        [permissions.CREATE_COURSE]: true,\n        [permissions.MODIFY_COURSE]: true,\n        [permissions.DELETE_COURSE]: false,\n        [permissions.CREATE_REVIEW]: true,\n        [permissions.MODERATE_REVIEW]: true,\n        [permissions.CREATE_FILE]: true,\n        [permissions.DELETE_FILE]: false,\n        [permissions.ELEVATE_USER]: false,\n        [permissions.DEMOTE_USER]: false,\n        [permissions.DEMOTE_USER]: false,\n        [permissions.BAN_USER]: false\n    },\n    [Role.USER]: {\n        [permissions.LOGIN_CPANEL]: false,\n        [permissions.CREATE_COURSE]: false,\n        [permissions.MODIFY_COURSE]: false,\n        [permissions.DELETE_COURSE]: false,\n        [permissions.CREATE_REVIEW]: true,\n        [permissions.MODERATE_REVIEW]: false,\n        [permissions.CREATE_FILE]: false,\n        [permissions.DELETE_FILE]: false,\n        [permissions.ELEVATE_USER]: false,\n        [permissions.DEMOTE_USER]: false,\n        [permissions.DEMOTE_USER]: false,\n        [permissions.BAN_USER]: false\n    },\n    [Role.ANONYMOUS]: {\n\n    }\n};\n","import Spin from \"antd/lib/spin\";\nimport React from \"react\";\n\nconst Loader = () => {\n  return (\n    <Spin tip=\"Loading...\">\n      <div style={{ width: \"100%\", height: \"100vh\" }}></div>\n    </Spin>\n  );\n};\n\nexport default Loader;\n","export const BACKEND_ROOT_URL = \"https://anciitk.herokuapp.com\"\n\nexport const BACKEND_LOGS = [\n    {\n        \"name\": \"Kratos\",\n        \"url\": \"https://reqres.in/api/users?page=2\"\n    },\n    {\n        \"name\": \"Oathkeeper\",\n        \"url\": \"http://adasd\"\n    },\n    {\n        \"name\": \"NGINX\",\n        \"url\": \"http://adasd\"\n    }\n]","import { LoginFlow, RegistrationFlow, PublicApi, SettingsFlow, VerificationFlow, RecoveryFlow, Session } from \"@ory/kratos-client\"\nimport { AxiosResponse } from \"axios\"\nimport config from \"config/kratos\"\nimport { Role } from \"./abac\"\n\nexport const kratos = new PublicApi({ basePath: config.kratos.browser })\n\nexport type KRATOS_SESSION = (Session | { active: boolean }) & { role: Role }\n\nexport const initialiseRequest = ({ type }: { type: \"login\" | \"register\" | \"settings\" | \"verify\" | \"recover\" }): Promise<LoginFlow | RegistrationFlow | SettingsFlow | VerificationFlow | RecoveryFlow> => {\n    const endpoints = {\n        login: `${config.kratos.browser}/self-service/login/browser`,\n        register: `${config.kratos.browser}/self-service/registration/browser?refresh=true`,\n        settings: `${config.kratos.browser}/self-service/settings/browser`,\n        verify: `${config.kratos.public}/self-service/browser/flows/verification/init/email`,\n        recover: `${config.kratos.public}/self-service/recovery/browser`\n    }\n\n    return new Promise((resolve, reject) => {\n        const params = new URLSearchParams(window.location.search)\n        const request = params.get(\"flow\") || \"\"\n        console.log(request)\n        const endpoint = endpoints[type]\n\n        // Ensure request exists in params.\n        if (!request) return window.location.href = endpoint\n\n        let authRequest: Promise<any> | undefined\n        if (type === \"login\") authRequest = kratos.getSelfServiceLoginFlow(request, {\n            withCredentials: true\n        })\n        else if (type === \"register\") authRequest = kratos.getSelfServiceRegistrationFlow(request, {\n            withCredentials: true\n        })\n        else if (type === \"settings\") authRequest = kratos.getSelfServiceSettingsFlow(request, {\n            withCredentials: true\n        })\n        else if (type === \"recover\") authRequest = kratos.getSelfServiceRecoveryFlow(request,\n            {\n                withCredentials: true\n            })\n\n        if (!authRequest) return reject()\n        console.log(authRequest)\n\n        authRequest.then((response: AxiosResponse<any>) => {\n            console.log(response)\n            if (response.status !== 200)\n                return reject(response)\n            resolve(response.data)\n        }).catch(error => {\n            console.log(error)\n            return reject()\n        })\n    })\n}","import { Role } from \"services/abac\"\nimport { KRATOS_SESSION } from \"services/kratos\"\nimport { atom } from \"recoil\"\n\nconst SESSION_STATE = atom<KRATOS_SESSION>({\n    key: \"SESSION_STATE\",\n    default: { active: false, role: Role.ADMIN }\n})\n\nexport { SESSION_STATE }"],"sourceRoot":""}