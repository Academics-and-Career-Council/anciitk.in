{"version":3,"sources":["__generated__/SearchCoursesQuery.graphql.ts","components/AdminFab.tsx","components/ListCourse.tsx","containers/SearchCourses.tsx","pages/search.tsx","constants.ts","services/gqlenv.ts"],"names":["node","v0","v1","hash","secured","permissions","LOGIN_CPANEL","mapPropsToData","props","noAccess","icon","LockOutlined","alwaysShowTitle","to","text","SettingOutlined","ListCourse","justify","xs","md","courseList","map","course","type","title","number","extra","style","marginTop","credits","id","length","SearchCoursesContainer","environment","query","variables","params","identifier","render","error","searchCourses","Loader","Search","useState","setText","dept","setDept","setParams","useDebounce","dparam","useEffect","backgroundColor","height","Content","className","padding","marginBottom","Group","compact","defaultValue","width","onChange","e","depts","Option","value","placeholder","allowClear","currentTarget","SearchCourses","FORM_LABELS","label","priority","email","password","offerings_sub","offerings","children","Environment","network","Network","create","operation","axios","post","BACKEND_ROOT_URL","JSON","stringify","headers","withCredentials","then","response","data","store","Store","RecordSource"],"mappings":"8FAAA,OAuCA,IAAMA,EAAyB,WAC/B,IAAIC,EAAK,CACP,CACE,aAAgB,KAChB,KAAQ,gBACR,KAAQ,WAGZC,EAAK,CACH,CACE,MAAS,KACT,KAAQ,CACN,CACE,KAAQ,WACR,KAAQ,SACR,aAAgB,WAGpB,aAAgB,SAChB,KAAQ,cACR,KAAQ,gBACR,QAAU,EACV,WAAc,CACZ,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,KACR,WAAc,MAEhB,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,QACR,WAAc,MAEhB,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,SACR,WAAc,MAEhB,CACE,MAAS,KACT,KAAQ,KACR,KAAQ,cACR,KAAQ,UACR,WAAc,OAGlB,WAAc,OAGlB,MAAO,CACL,SAAY,CACV,oBAAwBD,EACxB,KAAQ,WACR,SAAY,KACZ,KAAQ,qBACR,WAAeC,EACf,KAAQ,QACR,YAAe,MAEjB,KAAQ,UACR,UAAa,CACX,oBAAwBD,EACxB,KAAQ,YACR,KAAQ,qBACR,WAAeC,GAEjB,OAAU,CACR,QAAW,mCACX,GAAM,KACN,SAAY,GACZ,KAAQ,qBACR,cAAiB,QACjB,KAAQ,uJA9EmB,GAkF9BF,EAAaG,KAAO,mCACNH,a,yQCtGAI,cAAQ,CACrBC,YAAaA,IAAYC,aACzBC,eAAgB,SAACC,GAAD,OAAWA,GAC3BC,SAAU,kBAAM,0BAHHL,EAZE,WACf,OACE,cAAC,IAAD,CAAKM,KAAM,cAACC,EAAA,EAAD,IAAkBC,iBAAe,EAA5C,SACE,cAAC,IAAD,CAASC,GAAG,UAAZ,SACE,cAAC,IAAD,CAAQC,KAAK,YAAb,SACE,cAACC,EAAA,EAAD,a,kFCiBKC,EAzBI,SAACR,GAGlB,OACE,mBAAKS,QAAQ,SAAb,SACE,oBAAKC,GAAI,GAAIC,GAAI,GAAjB,UACGX,EAAMY,WAAWC,KAAI,SAACC,GACrB,OACE,mBACEC,KAAK,QACLC,MAAOF,EAAOG,OACdC,MAAO,cAAC,IAAD,CAASb,GAAE,kBAAaS,EAAOG,QAA/B,kBACPE,MAAO,CAAEC,UAAW,OAJtB,mBAOMN,EAAOE,MAPb,YAOsBF,EAAOO,UAFtBP,EAAOQ,OAMW,IAA5BtB,EAAMY,WAAWW,QAAgB,mBAAQP,MAAM,4B,mCCezCQ,EA9BgB,SAACxB,GAC9B,OACE,cAAC,gBAAD,CACEyB,YAAaA,IACbC,WAAK,kBAULC,UAAW,CAAEC,OAAQ,CAAEC,WAAY7B,EAAM4B,SACzCE,OAAQ,YAAuB,IAApBC,EAAmB,EAAnBA,MAAO/B,EAAY,EAAZA,MAChB,OAAI+B,GAEF,IAAQA,MAAM,yBACP,cAAC,IAAD,CAAWT,GAAI,OAEnBtB,EAGE,cAAC,EAAD,CAAYY,WAAYZ,EAAMgC,gBAF5B,cAACC,EAAA,EAAD,Q,mBCwCFC,UA/DA,WAAO,IAAD,EACKC,mBAAiB,IADtB,mBACZ7B,EADY,KACN8B,EADM,OAEKD,mBAAiB,IAFtB,mBAEZE,EAFY,KAENC,EAFM,OAGSH,mBAAiB,IAH1B,mBAGZP,EAHY,KAGJW,EAHI,OAIFC,sBAAYZ,EAAQ,KAA9Ba,EAJY,oBAQnB,OAHAC,qBAAU,WACRH,EAAU,GAAD,OAAIF,GAAJ,OAAW/B,MACnB,CAACA,EAAM+B,IAER,oBAAQlB,MAAO,CAAEwB,gBAAiB,QAASC,OAAQ,SAAnD,UACE,cAAC,EAAD,IACA,kBAAQC,QAAR,CACEC,UAAU,cACV3B,MAAO,CAAE4B,QAAS,SAAU3B,UAAW,GAAI4B,aAAc,IAF3D,SAIE,sBAAKF,UAAU,2BAAf,UACE,mBAAKrC,QAAQ,SAAb,SACE,mBAAKC,GAAI,GAAIC,GAAI,GAAjB,SACE,mBAAOsC,MAAP,CAAaC,SAAO,EAApB,UACE,mBACEC,aAAa,QACbhC,MAAO,CAAEiC,MAAO,OAChBC,SAAU,SAACC,GACThB,EAAQgB,GACRlB,EAAQ,KALZ,SAQGmB,IAAM1C,KAAI,SAACwB,GACV,OACE,kBAAQmB,OAAR,CAAeC,MAAOpB,EAAtB,SACGA,GAD8BA,QAMvC,mBACElB,MAAO,CAAEiC,MAAO,OAChBM,YAAY,cAYZC,YAAU,EACVF,MAAOnD,EACP+C,SAAU,SAACC,GAAD,OAAOlB,EAAQkB,EAAEM,cAAcH,iBAKjD,cAACI,EAAD,CAAwBjC,OAAQa,c,iCC3D1C,sGAAO,IAAMqB,EAA4C,CACrD,UAAa,CACTC,MAAO,QACPC,SAAU,KAEd,WAAc,CACVD,MAAO,GACPC,SAAU,KAEd,eAAgB,CACZD,MAAO,QACPC,SAAU,IAEdC,MAAO,CACHF,MAAO,QACPC,SAAU,IAEdnC,WAAY,CACRkC,MAAO,QACPC,SAAU,IAEdE,SAAU,CACNH,MAAO,WACPC,SAAU,KAILT,EAAQ,CAAC,KAAM,MAAO,MAAO,KAAM,MAAO,MAAO,KAAM,MAAO,MAAO,MAAO,KAAM,MAAO,MAAO,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,KAAM,MAAO,KAAM,MAAO,MAAO,MAAO,KAAM,MAAO,MAAO,MAAO,KAAM,MAAO,MAEhOY,EAAgB,CAClB,CACIV,MAAO,OACPM,MAAO,QAEX,CACIN,MAAO,MACPM,MAAO,QAIFK,EAAY,CAErB,CACIX,MAAO,QACPM,MAAO,QACPM,SAAUF,GAEd,CACIV,MAAO,QACPM,MAAO,QACPM,SAAUF,GACX,CACCV,MAAO,QACPM,MAAO,QACPM,SAAUF,GAEd,CACIV,MAAO,QACPM,MAAO,QACPM,SAAUF,K,iCChElB,sCA8BM1C,EAAc,IAAI6C,cAAY,CAChCC,QAASC,UAAQC,QArBa,SAC9BC,EACA/C,GAEA,OAAOgD,IAAMC,KAAN,UAAcC,IAAd,mBACHC,KAAKC,UAAU,CACXrD,MAAOgD,EAAUpE,KACjBqB,cAEJ,CACIqD,QAAS,CACL,eAAgB,oBAEpBC,iBAAiB,IAEvBC,MAAK,SAAAC,GACH,OAAOA,EAASC,WAMpBC,MAAO,IAAIC,QAAM,IAAIC,kBAGV9D","file":"static/js/17.e5af723f.chunk.js","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type SearchParams = {\n    identifier: string;\n};\nexport type SearchCoursesQueryVariables = {\n    params: SearchParams;\n};\nexport type SearchCoursesQueryResponse = {\n    readonly searchCourses: ReadonlyArray<{\n        readonly id: string;\n        readonly title: string;\n        readonly number: string;\n        readonly credits: string;\n    }>;\n};\nexport type SearchCoursesQuery = {\n    readonly response: SearchCoursesQueryResponse;\n    readonly variables: SearchCoursesQueryVariables;\n};\n\n\n\n/*\nquery SearchCoursesQuery(\n  $params: SearchParams!\n) {\n  searchCourses(params: $params) {\n    id\n    title\n    number\n    credits\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"params\"\n  }\n],\nv1 = [\n  {\n    \"alias\": null,\n    \"args\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"params\",\n        \"variableName\": \"params\"\n      }\n    ],\n    \"concreteType\": \"Course\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"searchCourses\",\n    \"plural\": true,\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"id\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"title\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"number\",\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"credits\",\n        \"storageKey\": null\n      }\n    ],\n    \"storageKey\": null\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"SearchCoursesQuery\",\n    \"selections\": (v1/*: any*/),\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"SearchCoursesQuery\",\n    \"selections\": (v1/*: any*/)\n  },\n  \"params\": {\n    \"cacheID\": \"83b6a2d036a3a676b1de911577394ba5\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"SearchCoursesQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query SearchCoursesQuery(\\n  $params: SearchParams!\\n) {\\n  searchCourses(params: $params) {\\n    id\\n    title\\n    number\\n    credits\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = '975ffe82564e408d18044ee2c4096bd5';\nexport default node;\n","import React from \"react\";\nimport { secured } from \"react-abac\";\nimport { NavLink } from \"react-router-dom\";\nimport { Action, Fab } from \"react-tiny-fab\";\nimport \"react-tiny-fab/dist/styles.css\";\nimport { permissions } from \"services/abac\";\nimport { LockOutlined, SettingOutlined } from \"@ant-design/icons\";\n\nconst AdminFab = () => {\n  return (\n    <Fab icon={<LockOutlined />} alwaysShowTitle>\n      <NavLink to=\"/cpanel\">\n        <Action text=\"Dashboard\">\n          <SettingOutlined />\n        </Action>\n      </NavLink>\n    </Fab>\n  );\n};\n\nexport default secured({\n  permissions: permissions.LOGIN_CPANEL,\n  mapPropsToData: (props) => props,\n  noAccess: () => <div />,\n})(AdminFab);\n","import { SearchCoursesQuery } from \"__generated__/SearchCoursesQuery.graphql\";\nimport { Card, Col, Result, Row } from \"antd\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst ListCourse = (props: {\n  courseList: SearchCoursesQuery[\"response\"][\"searchCourses\"];\n}) => {\n  return (\n    <Row justify=\"center\">\n      <Col xs={24} md={12}>\n        {props.courseList.map((course) => {\n          return (\n            <Card\n              type=\"inner\"\n              title={course.number}\n              extra={<NavLink to={`/course/${course.number}`}>More</NavLink>}\n              style={{ marginTop: \"4vh\" }}\n              key={course.id}\n            >\n              {`${course.title} ${course.credits}`}\n            </Card>\n          );\n        })}\n        {props.courseList.length === 0 && <Result title=\"No Courses found!\" />}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ListCourse;\n","import { SearchCoursesQuery } from \"__generated__/SearchCoursesQuery.graphql\";\nimport { message } from \"antd\";\nimport ListCourse from \"components/ListCourse\";\nimport Loader from \"components/Loader\";\nimport ErrorPage from \"pages/error\";\nimport React, { useState } from \"react\";\nimport { graphql, QueryRenderer } from \"react-relay\";\nimport environment from \"services/gqlenv\";\n\nconst SearchCoursesContainer = (props: { params: string }) => {\n  return (\n    <QueryRenderer<SearchCoursesQuery>\n      environment={environment}\n      query={graphql`\n        query SearchCoursesQuery($params: SearchParams!) {\n          searchCourses(params: $params) {\n            id\n            title\n            number\n            credits\n          }\n        }\n      `}\n      variables={{ params: { identifier: props.params } }}\n      render={({ error, props }) => {\n        if (error) {\n          // error.name\n          message.error(\"Unable to fetch Data!\");\n          return <ErrorPage id={500} />;\n        }\n        if (!props) {\n          return <Loader />;\n        }\n        return <ListCourse courseList={props.searchCourses} />;\n      }}\n    />\n  );\n};\n\nexport default SearchCoursesContainer;\n","import { Col, Input, Layout, Row, Select } from \"antd\";\nimport AdminFab from \"components/AdminFab\";\nimport SearchCoursesContainer from \"containers/SearchCourses\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDebounce } from \"use-debounce/lib\";\n\nimport { depts } from \"../constants\";\n\nconst Search = () => {\n  const [text, setText] = useState<string>(\"\");\n  const [dept, setDept] = useState<string>(\"\");\n  const [params, setParams] = useState<string>(\"\");\n  const [dparam] = useDebounce(params, 500);\n  useEffect(() => {\n    setParams(`${dept}${text}`);\n  }, [text, dept]);\n  return (\n    <Layout style={{ backgroundColor: \"white\", height: \"100vh\" }}>\n      <AdminFab />\n      <Layout.Content\n        className=\"site-layout\"\n        style={{ padding: \"0 50px\", marginTop: 64, marginBottom: 64 }}\n      >\n        <div className=\"site-input-group-wrapper\">\n          <Row justify=\"center\">\n            <Col xs={24} md={12}>\n              <Input.Group compact>\n                <Select\n                  defaultValue=\"Dept.\"\n                  style={{ width: \"30%\" }}\n                  onChange={(e) => {\n                    setDept(e);\n                    setText(\"\");\n                  }}\n                >\n                  {depts.map((dept) => {\n                    return (\n                      <Select.Option value={dept} key={dept}>\n                        {dept}\n                      </Select.Option>\n                    );\n                  })}\n                </Select>\n                <Input\n                  style={{ width: \"70%\" }}\n                  placeholder=\"Course Code\"\n                  //   options={courseList.map((course) => {\n                  //     return {\n                  //       value:\n                  //         course.number.replace(/\\D/g, \"\") +\n                  //         (isNaN(\n                  //           parseInt(course.number[course.number.length - 1])\n                  //         )\n                  //           ? course.number[course.number.length - 1]\n                  //           : \"\"),\n                  //     };\n                  //   })}\n                  allowClear\n                  value={text}\n                  onChange={(e) => setText(e.currentTarget.value)}\n                />\n              </Input.Group>\n            </Col>\n          </Row>\n          <SearchCoursesContainer params={dparam} />\n        </div>\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default Search;\n","interface FormLabel {\n    label: string;\n    priority: number;\n}\n\nexport const FORM_LABELS: { [key: string]: FormLabel } = {\n    \"to_verify\": {\n        label: \"Email\",\n        priority: 100\n    },\n    \"csrf_token\": {\n        label: \"\",\n        priority: 100\n    },\n    \"traits.email\": {\n        label: \"Email\",\n        priority: 90,\n    },\n    email: {\n        label: \"Email\",\n        priority: 80\n    },\n    identifier: {\n        label: \"Email\",\n        priority: 80\n    },\n    password: {\n        label: \"Password\",\n        priority: 80\n    }\n}\n\nexport const depts = [\"AE\", \"ART\", \"BSE\", \"CE\", \"CHE\", \"CHM\", \"CS\", \"CSO\", \"DES\", \"ECO\", \"EE\", \"EEM\", \"ENG\", \"ES\", \"ESC\", \"ESO\", \"IME\", \"PHY\", \"LIF\", \"LT\", \"MBA\", \"ME\", \"MSE\", \"MSO\", \"MTH\", \"NT\", \"PHI\", \"PHY\", \"PSY\", \"SE\", \"SOC\", \"TA\"];\n\nconst offerings_sub = [\n    {\n        value: 'Even',\n        label: 'Even',\n    },\n    {\n        value: 'Odd',\n        label: 'Odd',\n    },\n]\n\nexport const offerings = [\n\n    {\n        value: '20-21',\n        label: '20-21',\n        children: offerings_sub\n    },\n    {\n        value: '19-20',\n        label: '19-20',\n        children: offerings_sub\n    }, {\n        value: '18-19',\n        label: '18-19',\n        children: offerings_sub\n    },\n    {\n        value: '17-18',\n        label: '17-18',\n        children: offerings_sub\n    },\n\n];","import axios from 'axios';\nimport { BACKEND_ROOT_URL } from 'config/backend';\nimport {\n    Environment,\n    FetchFunction,\n    Network,\n    RecordSource,\n    Store,\n} from 'relay-runtime';\n\nconst fetchQuery: FetchFunction = (\n    operation,\n    variables,\n) => {\n    return axios.post(`${BACKEND_ROOT_URL}/.fiber/graphql`,\n        JSON.stringify({\n            query: operation.text,\n            variables,\n        }),\n        {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            withCredentials: true\n        }\n    ).then(response => {\n        return response.data;\n    });\n}\n\nconst environment = new Environment({\n    network: Network.create(fetchQuery),\n    store: new Store(new RecordSource()),\n});\n\nexport default environment;\n"],"sourceRoot":""}